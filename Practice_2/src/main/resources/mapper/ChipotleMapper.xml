<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="infs7205.gu.practice_2.mapper.ChipotleMapper">
  <resultMap id="BaseResultMap" type="infs7205.gu.practice_2.model.Chipotle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="geom" jdbcType="OTHER" property="geom" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, state, location, address, latitude, longitude, geom
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from chipotle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectChipotle" resultMap="BaseResultMap" >
    SELECT id,state,location,address,latitude,longitude,
      ST_Distance(geom,ST_SetSRID(ST_MakePoint(#{longitude}, #{latitude}),4326)::geography) AS distance_m
    FROM chipotle
    ORDER BY
      ST_Distance(geom,ST_SetSRID(ST_MakePoint(#{longitude}, #{latitude}),4326)::geography)
    LIMIT #{num}
  </select>
  <select id="selectChipotleByRectangle" resultType="infs7205.gu.practice_2.model.Chipotle">
    SELECT id, state, location, address, latitude, longitude
    FROM chipotle
    WHERE ST_Within(geom::geometry,ST_MakeEnvelope(#{minLng}, #{minLat}, #{maxLng}, #{maxLat}, 4326));
  </select>
  <select id="selectChipotleByCorridor" resultType="infs7205.gu.practice_2.model.Chipotle">
    WITH
    route AS (SELECT ST_SetSRID(ST_MakeLine(ST_MakePoint(#{Lng1}, #{Lat1}),ST_MakePoint(#{Lng2}, #{Lat2})),4326)::geography AS geom),
    -- 2) 在路线两侧做 buffer，得到廊区 geometry
    corridor AS (SELECT (ST_Buffer(route.geom, #{radius} * 1000))::geometry AS geom FROM route )
    SELECT c.id, c.state, c.location, c.address, c.latitude, c.longitude,
      ST_Distance(c.geom,(SELECT geom FROM route)) AS dist_to_route_m,
      ST_LineLocatePoint((SELECT geom FROM route)::geometry,c.geom::geometry) AS frac_along_route
    FROM chipotle AS c
           JOIN corridor AS cor ON ST_Within(c.geom::geometry, cor.geom)
    ORDER BY frac_along_route
  </select>
  <select id="selectCorridorGeo" resultType="java.lang.String">
    SELECT
        ST_AsGeoJSON((ST_Buffer(ST_SetSRID(ST_MakeLine(
                                                   ST_MakePoint(#{Lng1}, #{Lat1}),
                                                   ST_MakePoint(#{Lng2}, #{Lat2})),
                                   4326)::geography,#{radius} * 1000))::geometry);
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from chipotle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="infs7205.gu.practice_2.model.Chipotle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into chipotle (id, state, location, 
      address, latitude, longitude, 
      geom)
    values (#{id,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}, 
      #{geom,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="infs7205.gu.practice_2.model.Chipotle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into chipotle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="geom != null">
        geom,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="geom != null">
        #{geom,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="infs7205.gu.practice_2.model.Chipotle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update chipotle
    <set>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="geom != null">
        geom = #{geom,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="infs7205.gu.practice_2.model.Chipotle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update chipotle
    set state = #{state,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      geom = #{geom,jdbcType=OTHER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>